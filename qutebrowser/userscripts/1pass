#!/usr/bin/env bash

set +e

# JS field injection code from https://github.com/qutebrowser/qutebrowser/blob/main/misc/userscripts/password_fill
javascript_escape() {
    # print the first argument in an escaped way, such that it can safely
    # be used within javascripts double quotes
    # shellcheck disable=SC2001
    sed "s,[\\\\'\"\/],\\\\&,g" <<< "$1"
}

js() {
cat <<EOF
    function isVisible(elem) {
        var style = elem.ownerDocument.defaultView.getComputedStyle(elem, null);
        if (style.getPropertyValue("visibility") !== "visible" ||
            style.getPropertyValue("display") === "none" ||
            style.getPropertyValue("opacity") === "0") {
            return false;
        }
        return elem.offsetWidth > 0 && elem.offsetHeight > 0;
    };
    function hasPasswordField(form) {
        var inputs = form.getElementsByTagName("input");
        for (var j = 0; j < inputs.length; j++) {
            var input = inputs[j];
            if (input.type == "password") {
                return true;
            }
        }
        return false;
    };
    function loadData2Form (form) {
        var inputs = form.getElementsByTagName("input");
        for (var j = 0; j < inputs.length; j++) {
            var input = inputs[j];
            if (isVisible(input) && (input.type == "text" || input.type == "email")) {
                input.focus();
                input.value = "$(javascript_escape "${USERNAME}")";
                input.dispatchEvent(new Event('change'));
                input.blur();
            }
            if (input.type == "password") {
                input.focus();
                input.value = "$(javascript_escape "${PASSWORD}")";
                input.dispatchEvent(new Event('change'));
                input.blur();
            }
        }
    };
    var forms = document.getElementsByTagName("form");
    if("$(javascript_escape "${QUTE_URL}")" == window.location.href) {
        for (i = 0; i < forms.length; i++) {
            if (hasPasswordField(forms[i])) {
                loadData2Form(forms[i]);
            }
        }
    } else {
        alert("Secrets will not be inserted.\nUrl of this page and the one where the user script was started differ.");
    }
EOF
}

URL=$(echo "$QUTE_URL" | awk -F/ '{print $3}' | sed 's/www.//g')

echo "message-info 'Looking for password for $URL...'" >> "$QUTE_FIFO"

LIST=$(op item list --format=json | jq --raw-output --arg url "$URL" '.[] | select(.urls | length > 0) | select(.urls[] | .href | test(".*\($url).*")) | [.title, .id] | @tsv')
[ $(echo $LIST | wc -l) -eq 0 ] && echo "message-error 'Entry not found for $URL'" >> "$QUTE_FIFO" && exit 0

[ $(echo $LIST | wc -l) -gt 1 ] && LIST=$(echo $LIST | rofi -no-custom -dmenu -select -i)

ID=$(echo $LIST | awk '{print $NF}')
[ -z "$ID" ] && echo "message-error 'Entry not found for $ID'" >> "$QUTE_FIFO" && exit 0

ITEM=$(op item get --reveal --format=json "$ID")

PASSWORD=$(echo "$ITEM" | jq -r '.fields | .[] | select(.id=="password") | .value')
[ -z "$PASSWORD" ] && echo "message-error 'No password found for $URL'" >> "$QUTE_FIFO" && exit 0

TITLE=$(echo "$ITEM" | jq --raw-output '.title')
USERNAME=$(echo "$ITEM" | jq -r '.fields | .[] | select(.id=="username") | .value')

printjs() {
  js | sed 's,//.*$,,' | tr '\n' ' '
}
echo "jseval -q $(printjs)" >> "$QUTE_FIFO"
echo "message-info '1Password: $TITLE'" >> "$QUTE_FIFO" 

TOTP=$(echo "$ITEM" | op item get --otp "$ID")
[ -z "$TOTP" ] && exit 0

echo "$TOTP" | wl-copy
echo "message-info 'Pasted one time password for $TITLE to clipboard'" >> "$QUTE_FIFO" 
